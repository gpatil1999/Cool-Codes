//A Simple Solution is to do following for every node pre[i] starting from first one.
//1) Find the first greater value on right side of current node. 
 //  Let the index of this node be j. Return true if following 
 //  conditions hold. Else return false
  //  (i)  All values after the above found greater value are 
   //      greater than current node.
  //  (ii) Recursive calls for the subarrays pre[i+1..j-1] and 
   //      pre[j+1..n-1] also return true. 
//Time Complexity of the above solution is O(n2)



//Method2: 
int Solution::solve(vector<int> &v) {
    stack<int> s;
    int root = INT_MIN;
    
    for(int i=0; i<v.size(); i++){
        if(v[i]<root)
            return 0;
        
        while(!s.empty() && s.top()<v[i]){
            root = s.top();
            s.pop();
        }
        
        s.push(v[i]);
    }
    return 1;
}
