void deleterm(Node *root, Node* dnode){
    queue<Node*> q;
    q.push(root);
    Node *temp;
    while(!q.empty()){
        temp = q.front();
        q.pop();
        
        if(temp==dnode){
            temp = NULL;
            delete(dnode);
            return;
        }
        
        if(temp->left){
            if(temp->left==dnode){
                temp->left=NULL;
                delete(dnode);
                return;
            }
            else
                q.push(temp->left);
        }
        
        if(temp->right){
            if(temp->right==dnode){
                temp->right=NULL;
                delete(dnode);
                return;
            }
            else
                q.push(temp->right);
        }
    }
}

struct Node* deletionBT(struct Node* root, int key)
{
    Node *keynode = NULL, *temp;
    queue<Node*> q;
    
    q.push(root);
    
    while(!q.empty()){
        temp = q.front();
        q.pop();
        
        if(temp->data==key)
            keynode = temp;
        
        if(temp->left)
            q.push(temp->left);
            
        if(temp->right)
            q.push(temp->right);
    }
    
    if(keynode!=NULL){
        keynode->data = temp->data;
        
        deleterm(root, temp);
    }
    return root;
}
