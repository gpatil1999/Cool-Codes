int findarea(vector<int> &v){
    stack<int> s;
    int i=0,max_area = 0, width=0;
    while(i<v.size()){
        if(s.empty() || v[s.top()]<=v[i])
           { s.push(i);
            i++;}
        else{
            int curr = s.top();
            s.pop();
            if(s.empty())
                width = i;
            else width = i-1-s.top();
            max_area = max(max_area, v[curr]*width);
        }    
    }
    while(!s.empty()){
            int curr = s.top();
            s.pop();
            if(s.empty())
                width = i;
            else width = i-1-s.top();
            max_area = max(max_area, v[curr]*width);
    }
    return max_area;
}
int maxArea(int M[MAX][MAX], int n, int m) {
    int max_area=0;
    vector<int> v(m,0);
    for(int i=0 ;i < n; i++){
        for(int j=0;j<m; j++){
            if(M[i][j]==0)
                v[j]=0;
            else v[j]++;
        }
        int area = findarea(v);
        max_area = max(max_area, area);
    }
    return max_area;
}
