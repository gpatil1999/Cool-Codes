int prec(char c){
    if(c=='^')
        return 3;
    else if(c=='*' || c=='/')
        return 2;
    else if(c=='+' || c=='-')
        return 1;
    else return -1;    
}
string infixToPostfix(string s)
{
    stack<char> st;
    string newstr="";
    for(int i=0; i<s.size(); i++){
        if((s[i]>='a'&&s[i]<='z') ||(s[i]>='A'&&s[i]<='Z'))
            newstr.push_back(s[i]);
        else if(s[i]=='(')
            st.push(s[i]);
        else if(s[i]==')'){
            while(!st.empty() && st.top()!='('){
                newstr.push_back(st.top());
                st.pop();
            } 
            if(!st.empty())
                st.pop();   
        }
        else{
            while(!st.empty() && prec(s[i])<=prec(st.top()))
                {   newstr.push_back(st.top());
                    st.pop();
                }
                st.push(s[i]);
        }
    }
    while(!st.empty()){
        newstr.push_back(st.top());
        st.pop();
    }
    return newstr;
}
